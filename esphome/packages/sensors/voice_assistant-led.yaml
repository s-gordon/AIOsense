esp32:
  framework:
    type: esp-idf
    version: 5.3.1            # https://github.com/espressif/esp-idf/releases
    platform_version: 6.9.0   # https://github.com/platformio/platform-espressif32/releases/

psram:
  mode: quad
  speed: 80MHz

i2s_audio:
  id: i2s_audiobus
  i2s_lrclk_pin: "${i2s_lrclk_pin}"   # WS
  i2s_bclk_pin: "${i2s_bclk_pin}"     # SCK

microphone:
  - platform: i2s_audio
    id: external_microphone
    channel: left
    adc_type: external
    i2s_din_pin: "${i2s_din_pin}"     # SD
    i2s_audio_id: i2s_audiobus
    pdm: false

speaker:
  - platform: i2s_audio
    id: va_speaker
    i2s_dout_pin: ${i2s_dout_pin}
    dac_type: external
    channel: mono

voice_assistant:
  id: va
  microphone: external_microphone
  speaker: va_speaker
  noise_suppression_level: 2
  auto_gain: 31dBFS
  volume_multiplier: 2.0
  on_listening:
    - light.turn_on:
        id: led
        effect: strobe
  on_tts_start:
    - light.turn_on:
        id: led
        effect: strobe
  on_end:
    - delay: 100ms
    - script.execute: reset_led
  on_error:
    - light.turn_on:
        id: led
        effect: none
    - delay: 1s
    - script.execute: reset_led
    - script.wait: reset_led
  on_client_connected:
    - delay: 5s
    - if:
        condition:
          lambda: return id(wake_word_engine_location).state == "In Home Assistant";
        then:
          - voice_assistant.start_continuous:
  on_client_disconnected:
    - voice_assistant.stop:

script:
  - id: reset_led
    then:
      - if:
          condition:
            - lambda: return id(wake_word_engine_location).state == "In Home Assistant";
            - switch.is_on: listen_light
          then:
          - light.turn_on:
              id: led
              effect: none
          else:
            - light.turn_off: led

switch:
  - platform: template
    name: "VA Listen Light"
    id: listen_light
    optimistic: true
    restore_mode: RESTORE_DEFAULT_ON
    entity_category: config
    on_turn_on:
      - script.execute: reset_led
    on_turn_off:
      - script.execute: reset_led

select:
  - id: wake_word_engine_location
    platform: template
    entity_category: config
    name: Wake word engine location
    optimistic: true
    restore_value: true
    options:
      - In Home Assistant
      - Disable
    initial_option: Disable
    on_value:
      - if:
          condition:
            lambda: return x == "In Home Assistant";
          then:
            - lambda: id(va).set_use_wake_word(true);
            - voice_assistant.start_continuous:
      - if:
          condition:
            lambda: return x == "Disable";
          then:
            - lambda: id(va).set_use_wake_word(false);
            - voice_assistant.stop
            - delay: 500ms
            - script.execute: reset_led

esphome:
  min_version: 2023.10.0
  on_boot:
    - priority: -100
      then:
        - wait_until: api.connected
        - delay: 1s
        - voice_assistant.start_continuous: